name: Raptor CI

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  build-linux:
    name: Raptor CI LLVM ${{ matrix.llvm }} ${{ matrix.build }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        llvm: ["20", "21"]
        build: ["Release"] #, "Debug"] #, "RelWithDebInfo"]
        os: [ubuntu-22.04]

    timeout-minutes: 30

    steps:
    - name: add llvm
      run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo apt-add-repository "deb http://apt.llvm.org/`lsb_release -c | cut -f2`/ llvm-toolchain-`lsb_release -c | cut -f2`-${{ matrix.llvm }} main" || true
          sudo apt-get install -y cmake gcc g++ llvm-${{ matrix.llvm }}-dev libclang-${{ matrix.llvm }}-dev clang-${{ matrix.llvm }} lld-${{ matrix.llvm }} mlir-${{ matrix.llvm }}-tools libmlir-${{ matrix.llvm }} libmlir-${{ matrix.llvm }}-dev libflang-${{ matrix.llvm }}-dev flang-${{ matrix.llvm }} libzstd-dev libmpfr-dev libomp-${{ matrix.llvm }}-dev
          sudo python3 -m pip install --upgrade pip lit
    - uses: actions/checkout@v4
    - name: mkdir
      run: rm -rf build && mkdir build
    - name: cmake
      working-directory: build
      run: cmake ../ -DCMAKE_BUILD_TYPE=${{ matrix.build }} -DLLVM_EXTERNAL_LIT=`which lit` -DLLVM_DIR=/usr/lib/llvm-${{ matrix.llvm }}/lib/cmake/llvm
    - name: make
      working-directory: build
      run: make -j `nproc`
    - name: make check
      working-directory: build
      run: make -j `nproc` check-all
